#!/usr/bin/env bash

set -euo pipefail

# Variables
# =========

repo_dir="$(cd $(dirname $0)/..; pwd -P)"
tezos_dir="$repo_dir/ext/tezos"

export TEMP_DIR=$(mktemp --directory --tmpdir tmp-tezos-unit-test.XXXXXX)
tezos_base_dir="$TEMP_DIR/mockup-base/"

PATH="$tezos_dir:$PATH"

# Helpers
# =======

interpret() {
    local backend=$1; shift
    local input=$1; shift

    # --output-file only controls where the final configuration is output.
    # --output-file /dev/null supresses that, without supressing output
    # from `stream="stdout"` cells.
    "$repo_dir/kmich" interpret --backend $backend $input --output-file /dev/null "$@"
}

start_tezos()
{
    local tezos_protocol=ProtoALphaALphaALphaALphaALphaALphaALphaALphaDdp3zK
    mkdir "$tezos_base_dir"
    tezos-client --protocol "$tezos_protocol" --base-dir "$tezos_base_dir" create mockup
    export TEZOS_CLIENT="tezos-client --mode mockup --base-dir $tezos_base_dir"
}

stop_tezos() {
    rm -r "$tezos_base_dir"
}

tezos_client()
{
     $TEZOS_CLIENT "$@"   
}

# Main
# ====

test=$1; shift
interpret input-creator $test > $test.input
interpret extractor $test > $test.extracted

start_tezos
"$repo_dir/fix-address.sh" "$test"
interpret contract-expander "$test.address" > "$test.expanded"
"$repo_dir/run-tezos.sh" "$test"
stop_tezos
interpret output-compare "$test.output"
rm -r "$TEMP_DIR"
